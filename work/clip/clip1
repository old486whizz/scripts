24,17,21,2,dupl,11,02314462,12,0,23,02314462,end,end
/usr/openv/volmgr/bin/vmupdate -rt tld -rn 0 -interactive
lpadmin -p <PRINTQ> -s <PRINTD>!<PRINTQ-ON-D> -o nobanner
mkvg -S -s 128 -y <namevg> hdisk1
mklv -x 4096 -t jfs2 -y <namelv> appvg 10
crfs -v jfs2 -d <namelv> -m </mnt> -A yes
mkps -ans<number of LVs> <volume group>
usermod -x administrative_lock_applied=0
 --------------- VIO: ----------------
/usr/ios/cli/ioscli lsmap -all -field clientid svsa backing vtd -fmt :
/usr/ios/cli/ioscli rmvdev -vtd <vtd>
rmdev -dl <hdisk>

 -------------- MAXIMO: --------------
LIST="MAXIMOJVM1 MAXIMOJVM2" # ...
for i in $LIST; do
  HEAPD='$AdminControl invoke [$AdminControl queryNames WebSphere:type=JVM,process='$i',*] generateHeapDump'
  DUMPT='$AdminControl invoke [$AdminControl queryNames WebSphere:type=JVM,process='$i',*] dumpThreads'

  $Websphere_profiles_dir/Custom/bin/wsadmin.sh -lang jacl -user $USER -password $PASS -c "$HEAPD"
  $Websphere_profiles_dir/Custom/bin/wsadmin.sh -lang jacl -user $USER -password $PASS -c "$DUMPT"
done


select table_name from user_tables where table_name like '%SIB%' ;
drop table SIB000;
drop table SIB001;
drop table SIB002;
drop table SIBCLASSMAP;
drop table SIBKEYS;
drop table SIBLISTING;
drop table SIBOWNER;
drop table SIBXACTS;
select table_name from user_tables where table_name like '%SIB%' ;


alter session set nls_date_format='DD-MM-YY HH24:MI:SS';
col serverhost format a15;
col SERVERNAME format a25;
COMPUTE SUM label total OF cnt ON report;
BREAK ON report;

select serverhost,count(userid) cnt,servername
from maximo.maxsession
where servername like '%USE%'
and logindatetime > '13-03-2012'
group by serverhost,servername
order by serverhost,servername;

 -------------------------------------


p1 () { df -gt |grep -vwE `grep EXCL $1 |awk -F '=' '{print $2"$"}'|xargs|sed 's/ /|/g'`; }

ldapsearch.exe -s sub -h <ldap server> -C -L -b 'dc=local,dc=example,dc=com' -D 'usr1234@local.example.com' -w '******' -x


p1 () {
  # p1 <user> "<name>" <group> <boss>
  useradd -g $3 -c "$2[$4]" -m -x administrative_lock_applied=0 -x passwd_expiration_time=90 $1
  passwd $1
  edauth -g $1 |sed 's/:chkent:/:u_psw_change_reqd:chkent:/' |edauth -s
}

p1 () {
  # p1 <vgname> <lvname> </mount> <size>
  mklv -x 4096 -t jfs2 -y $2 $1 1
  crfs -v jfs2 -d $2 -m $3 -A yes
  chfs -a size=$4 $3
  chmod o+rx $3
  mount $3
}

p1 () {
  # p1 <dirname> <COMMAND>
  x="`echo $1 |awk -F'/' '{print NF}'`"
  PATHNAME="$1"
  y=1
  while (( y < x )); do
    echo $2 $PATHNAME
    $2 $PATHNAME
    PATHNAME="`dirname $PATHNAME`"
    ((y+=1))
  done
}

p1 () {
  # p1 <hdisk#> <vhost#> <server> <4-digit thing>
  /usr/ios/cli/ioscli chdev -dev hdisk$1 -attr reserve_policy=no_reserve pv=yes hcheck_interval=20 algorithm=round_robin
  /usr/ios/cli/ioscli mkvdev -vdev hdisk$1 -vadapter vhost$2 -dev $3_$4
}

p1 () {
  # p1 <server> <vhost#> <4-digit> <P/H>

  DISK=""
  OPT=""
  EGVPD=""
  YESNO=""
  HAV="string"
  echo "$4" |grep -i H >/dev/null
  [[ "$?" != "0" ]] && OPT="v"

  DISK=`odmget -q "attribute=unique_id" CuAt |egrep -ip "$3" |egrep -${OPT}ip "${HAV}" |awk -F '"' '/hdisk/{print $2}'`
  [[ `echo ${DISK} |wc -c` -gt 10 ]] && echo "TOO MANY DISKS RETURNED: '${DISK}'" && return 5
  [[ `echo ${DISK} |wc -c` -lt 3 ]] && echo "NO DISKS RETURNED: '${DISK}'" && return 7

  /usr/ios/cli/ioscli lsmap -vadapter vhost$2 -field clientid svsa backing vtd -fmt : >/dev/null 2>&1
  [[ "$?" != "0" ]] && echo "ADAPTER 'vhost$2' DOESN'T EXIST!!" && return 11

  EGVPD="`/usr/ios/cli/ioscli lsmap -vadapter vhost$2 -field clientid svsa backing vtd -fmt : |awk -F':' '{print $4}'`"
  if [[ "${EGVPD}" = " " ]]; then
    echo "IS THIS THE FIRST DIRSK TO THIS VHOST?"
    read YESNO
    echo "${YESNO}" |grep -i y >/dev/null 2>&1 || { echo "PLEASE INVESTIGATE" && return 14; }
  else
    echo "${EGVPD}" |grep -i $1 >/dev/null 2>&1 || { echo "SERVERNAME DOESN'T MATCH PREVIOUS VPDs (eg. '${EGVPD}').. PLEASE INVESTIGATE!" && return 17; }
  fi

  print /usr/ios/cli/ioscli chdev -dev ${DISK} -attr reserve_policy=no_reserve pv=yes hcheck_interval=20 algorithm=round_robin
  print /usr/ios/cli/ioscli mkvdev -vdev ${DISK} -vadapter vhost$2 -dev $1_${4}${3}
}

p1 () {
  # p1 <user> <group> <dir [...]>
  # Change mountpoints + filesystem ownerships
  user=$1
  shift
  group=$1
  shift

  for i in $@; do
    umount $i
    mkdir -p $i
    chmod o+rx $i
    mount $i
    chown $user:$group $i
  done
}

p1_m () {
  echo "filesystems not monitored:"
  mount |awk '/jfs2/{print $2}/type ext3/{print $3}/type advfs/{print $3}' |egrep -v "`awk -F'=| ' '/DISK/{print \"^\"$3\"$\"}' $SE_CONF/$(uname -n|tr '[a-z]' '[A-Z]').CONFIG |xargs |sed 's/ /|/g'`"
}

p1_f () {
  # p1_f "one two three four [...]"
  for i in $1; do
    x="-o -name=$i $x"
  done
  y=`echo $x|sed 's/-o / /g'`
  find . -type f $y
}

